@model Hospital_Management_System.Models.Patient
    @using Hospital_Library.Enum;

<form name="addform" id="addform">
    <div class="modal-header">
        <h4 class="modal-title" id="exampleModalLabel" style="padding-left:143px">PATIENT DETAILS</h4>
        <button type="button" style="margin-left:147px"  class="close" data-dismiss="modal" aria-label="Close">
            <span aria-hidden="true">&times;</span>
        </button>
    </div>
    <div class="modal-body">

        @Html.AntiForgeryToken()

        <div class="form-group">


            @*<hr />*@
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            @Html.HiddenFor(model => model.Id)

            <div class="form-horizontal">
                @Html.LabelFor(model => model.Name, "Name", htmlAttributes: new { @class = "control-label col-md-2", style = "padding-right:20px" })
                <div class="col-md-10" style="padding-left: 9%">
                    @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control disable", @id = "PatientName", style = "width:327px;", @onkeyup = "validatename()" } })
                    @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger", @id = "PatName" })
                </div>
            </div>
            <br />
            <br />
            <br />

            <div class="form-horizontal">
                @Html.LabelFor(model => model.Age, "Age", htmlAttributes: new { @class = "control-label col-md-2", style = "padding-right:33px" })
                <div class="col-md-10" style="padding-left: 9%">
                    @Html.EditorFor(model => model.Age, new
                    {
                        htmlAttributes = new
                        {
                            @class = "form-control disable",
                   @id = "PatientAge",
                   style = "width:327px;",
                            @onkeyup = "validateage()"
                        }
                    })
                    @Html.ValidationMessageFor(model => model.Age, "", new { @class = "text-danger", @id = "PatAge" })
                </div>
            </div>
            <br />
            <br />
            <br />

            <div class="form-horizontal">
                @Html.LabelFor(model => model.Gender, "Gender", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10" style="padding-left: 9%">
                    <select class=" form-select disable" name="Gender" id="Gender" style="width: 327px; height: 35px; font-size: small; " onchange="validategender()">
            <option value="">--Select--</option>
            <option value="Male">Male</option>
            <option value="Female">Female</option>
            <option value="Others">Others</option>
        </select>
                   
                    @Html.ValidationMessageFor(model => model.Gender, "", new { @class = "text-danger", @id = "PatGender" })
                </div>
                <br />
                <br />
                <br />

                <div class="form-horizontal">
                    @Html.LabelFor(model => model.Department, "Department", htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10" style="padding-left: 9%">
                        <select class="form-select disable" name="Department" id="Department" style="width: 327px; height: 35px; font-size: small;" onchange="validatedepartment()">
                            <option value="choose" disabled hidden>select</option>
                            <option value="">--Select--</option>
                            <option value="Gastroenterology">Gastroenterology</option>
                            <option value="Gynecology">Gynecology</option>
                            <option value="Critical Care">Critical Care</option>
                            <option value="Cardiology">Cardiology</option>
                        </select>
                        @Html.ValidationMessageFor(model => model.Department, "", new { @class = "text-danger", @id = "PatDepartment" })
                    </div>
                    <br />
                    <br />
                    <br />

                    <div class="form-horizontal">
                        @Html.LabelFor(model => model.CovidTestResult, "Covid Result", htmlAttributes: new { @class = "control-label col-md-5", style = "white-space:nowrap; width:16%" })
                        <div class="col-md-10" style="padding-left:10%">
                            <select class="form-select disable" name="CovidTestResult" id="CovidTestResult" style="width: 327px; height: 35px; font-size: small;" onchange="validateresult()">
                                <option value="choose" disabled hidden>select</option>
                                <option value="">--Select--</option>
                                <option value="Positive">Positive</option>
                                <option value="Negative">Negative</option>
                            </select>
                            @Html.ValidationMessageFor(model => model.CovidTestResult, "", new { @class = "text-danger", @id = "PatResult" })
                        </div>
                    </div>
                    <br />
                    <br />
                    <br />
                    <div class="form-horizontal">
                        @Html.LabelFor(model => model.Contact, "Contact", htmlAttributes: new { @class = "control-label col-md-4", style = "width:76px" })
                        <div class="col-md-10" style="padding-left:10%">
                            @Html.EditorFor(model => model.Contact, new { htmlAttributes = new { @class = "form-control disable", @id = "PatientContact", style = "width:327px;", @onkeyup = "validatecontact()" } })
                            @Html.ValidationMessageFor(model => model.Contact, "", new { @class = "text-danger", @id = "PatContact" })
                        </div>
                    </div>
                    <br />
                    <br />
                    <br />
                    <div class="form-group form-gap">
                        <div class="control-label col-md-3"></div>
                        <div class="col-md-8">
                            <span style="margin-right:1px">
                                @Html.EditorFor(model => model.InPatient, new { htmlAttributes = new { @class = "disable" } })
                            </span><b>In-Patient</b>
                            @Html.ValidationMessageFor(model => model.InPatient, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <div class="modal-footer"style="padding-right:28px">
        <button type="button" id="btnEdit" class="btn btn-warning" onclick="editPatient()" style="display:none;width:60px">Edit</button>
        <button type="button" id="btnSave" class="btn btn-success" onclick="updatePatient()">Save</button>
        <button type="button" id="addsave" class="btn btn-success" onclick="createPatient()" style=" width:60px">Save</button>
        <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
    </div>
</form>

<script type="text/javascript">
    $(document).ready(function ()
    {
        $('#Gender').val('@Model.Gender');
        $('#CovidTestResult').val('@Model.CovidTestResult');
        $('#Department').val('@Model.Department');

        var operation = '@Model.ActionType.ToString()';

        if (operation == '@Operations.Add')
        {
            $('.form-control').attr('disabled', false);
        }
        if (operation == '@Operations.Edit')
        {
            $('.form-control').attr('disabled', true);
            $('#Gender').val('@Model.Gender');
            $('#CovidTestResult').val('@Model.CovidTestResult');
            $('#Department').val('@Model.Department');
            //$('#btnEdit').hide()
            document.getElementById("btnedit").disabled = false;

        }
    });
    $("#Gender").change(function ()
    {
        var gen= $("#Gender").val();
        $("#Gender").val(gen);
});
    $("#CovidTestResult").change(function ()
    {
        var res = $("#CovidTestResult").val();
        $("#CovidTestResult").val(res);
    });
    $("#Department").change(function ()
    {
        var dep= $("#Department").val();
        $("#Department").val(dep);
    });

    function validatename()
    {
        const specialChars = /^[A-z a-z]+$/;
        var name = document.getElementById("PatientName").value;
        if (name == "")
        {
            document.getElementById("PatName").textContent = "Name is required";
            return false;
        }
        else if (!$("#PatientName").val().match(specialChars)) {
            document.getElementById("PatName").textContent = "Enter valid name";
            return false;
        }
        else if (name.length < 3)
        {
            document.getElementById("PatName").textContent = "Name should be atleast 3 characters";
            return false;
        }
        else if (name.length > 20)
        {
            document.getElementById("PatName").textContent = "Name should not be more than 20 characters";
            return false;
        }
        else
        {
            document.getElementById("PatName").textContent = " ";
            return true;
        }
    }
    function validateage()
    {

        var age = document.getElementById("PatientAge").value;
        if (age > 0 && age < 100) {
            document.getElementById("PatAge").textContent = "";
            console.log(age)
            return true;
        }

        else
        {
            document.getElementById("PatAge").textContent = "Enter  valid age ";
            return false;
        }

    }

    function validatecontact()
    {
        var contact = document.getElementById("PatientContact").value;
        if (contact == "")
        {
            document.getElementById("PatContact").textContent = "Phone number is required";
            return false;
        }
        else if (isNaN(contact))
        {
            document.getElementById("PatContact").textContent = "Only numeric value is required";
            return false;
        }
        else if ((contact.charAt(0) != 9) && (contact.charAt(0) != 8) && (contact.charAt(0) != 7))
        {
            document.getElementById("PatContact").textContent = "Phone number must start with 9,8,7";
            return false;
        }
        else if (contact.length < 10) 
        {
            document.getElementById("PatContact").textContent = "Phone number must be 10 digit";
            return false;
        }
        else if (contact.length > 10)
        {
            document.getElementById("PatContact").textContent = "Phone number must be 10 digit";
            return false;
        }
        
       
        else
        {
            document.getElementById("PatContact").textContent = " ";
            return true;
        }
    }
    
    function validategender()
    {
        var gender = document.getElementById("Gender").value;
        if (gender == "")
        {
            document.getElementById("PatGender").textContent = "Gender is required";
        }
        else if (gender.length <= 0)
        {
            document.getElementById("PatGender").textContent = "Please select a Gender";
            return false;
        }
        else
        {
            document.getElementById("PatGender").textContent = "";
        }
    }
    function validatedepartment()
    {
        var department = document.getElementById("Department").value;
        if (department == "")
        {
            document.getElementById("PatDepartment").textContent = "Department is required";
        }
        else if (department.length <= 0)
        {
            document.getElementById("PatDepartment").textContent = "Please select a Department";
            return false;
        }
        else {
            document.getElementById("PatDepartment").textContent = "";
        }
    }

    function validateresult()
    {
        var result = document.getElementById("CovidTestResult").value;
        if (result == "")
        {
            document.getElementById("PatResult").textContent = "Result is required";
        }
        else if (result.length <= 0)
        {
            document.getElementById("PatResult").textContent = "Please select a Result";
            return false;
        }
        else
        {
            document.getElementById("PatResult").textContent = "";
        }
    }
</script>
